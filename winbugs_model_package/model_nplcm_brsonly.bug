#######################################################
## Model for nested partial latent class model
#######################################################
MODEL{#BEGIN MODEL
    ##case measurements:
    for (i in 1:Nd){
		for (j in 1:Jfull){
			ind[i,j] <- equals(1,template[Icat[i],j])
			MBS[i,j]~dbern(mu_bs.bound[i,j])
			mu_bs.bound[i,j]<-max(0.000001,min(0.999999,mu_bs[i,j]))
			mu_bs[i,j]<-PR_BS[i,j,Z[i]]

			for (s in 1:K){
				PR_BS[i,j,s]<-PsiBS.cut[j,s]*(1-ind[i,j])+ThetaBS[j,s]*ind[i,j]
			}
		}
    }
	
	## cut the feedback from case model to FPR:
	for (j in 1:Jfull){
		for (s in 1:K){
			PsiBS.cut[j,s]<-cut(PsiBS[j,s])
		}
	}
	
	## control measurements
	for (i in (Nd+1):(Nd+Nu)){
				for (j in 1:Jfull){
								MBS[i,j]~dbern(mu_bs.bound[i,j])
								mu_bs.bound[i,j] <-max(0.000001,min(0.999999,mu_bs[i,j]))
								mu_bs[i,j]<-PsiBS[j,Z[i]]
				}
    }
	
   for (i in 1:Nd){
	   Z[i]~dcat(Eta[Icat[i],1:K])
       Icat[i] ~ dcat(pEti[1:Jallowed])
   }

	######################
	##etiology prior
	######################
    pEti[1:Jallowed]~ddirch(alpha[])
	for (i in (Nd+1):(Nd+Nu)){
	   Z[i]~dcat(Lambda[1:K])
	}
	
	####################################
	### stick-breaking specification 2
	####################################
	Lambda0[1]<-r0[1]
	r0[K]<-1
	for(j in 2:K) {Lambda0[j]<-r0[j]*(1-r0[j-1])*Lambda0[j-1]/r0[j-1]}
	for(k in 1:K-1){
	   r0[k]~dbeta(1,alphadp0)I(0.000001,0.999999)
	}
	
	for (k in 1:K-1){Lambda[k]<-max(0.000001,min(0.999999,Lambda0[k]))}
	Lambda[K]<-1-sum(Lambda[1:(K-1)])
	
	for (s in 1:Jfull){
		Eta0[s,1]<-r1[s,1]
		r1[s,K]<-1
		for(j in 2:K) {Eta0[s,j]<-r1[s,j]*(1-r1[s,j-1])*Eta0[s,j-1]/r1[s,j-1]}
		for(k in 1:K-1){
		   r1[s,k]~dbeta(1,alphadp0)I(0.000001,0.999999)
		}
    }
	
	for (s in 1:Jfull){
		for (k in 1:K-1){Eta[s,k]<-max(0.000001,min(0.999999,Eta0[s,k]))}
		Eta[s,K]<-1-sum(Eta[s,1:(K-1)])
	}
	
	alphadp0~dgamma(.25,.25)I(0.001,20)
	
	#########################
	## priors on TPR and FPR:
	#########################
	
	for (j in 1:Jfull){
		for (s in 1:K){
			PsiBS[j,s]~dbeta(1,1)
			#ThetaBS[j,s]~dbeta(1,1)
			ThetaBS[j,s]~dbeta(alphaB[j],betaB[j])
		}
		ThetaBS.marg[j]<-inprod2(ThetaBS[j,1:K],Eta[j,1:K])
		PsiBS.marg[j]<-inprod2(PsiBS[j,1:K],Lambda[1:K])
		
		for (l in 1:Jfull){
				PsiBS.case[j,l]<-inprod2(PsiBS[j,1:K],Eta[l,1:K])
	    }
	}

	

}#END MODEL
